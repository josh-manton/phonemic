name: Deploy on merge of pull request
on:
  pull_request_target:
    types:
      - closed
  workflow_dispatch:
    inputs:
      manual_run:
        description: 'Manually Trigger Workflow'
        required: true
        type: boolean
        default: true
jobs:
  deploy:
    if: github.event.pull_request.merged == true || inputs.manual_run == true
    runs-on: ubuntu-latest
    env: 
      WG_PRIVATE_KEY: ${{ secrets.WIREGUARD_PRIVATE_KEY }}
      WG_PUBLIC_KEY: ${{ secrets.WIREGUARD_PUBLIC_KEY }}
      WG_ENDPOINT: ${{ secrets.WIREGUARD_ENDPOINT }}      
      WG_CONF_PATH: '${{ github.workspace }}/../wg.conf'
      SSH_HOST: ${{ secrets.SSH_HOST }}      
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
      SSH_PRIVATE_KEY_PATH: '${{ github.workspace }}/../sshpk.key'
      CONFIG_FILES_EXIST: "false"
      VPN_CONNECTED: "false"
    steps:
    - name: Configure Wireguard    
      run: |
        sudo apt install wireguard
        cat > wg.conf << EOT
        [Interface]
        PrivateKey=$WG_PRIVATE_KEY
        Address=10.189.152.219/32
        MTU=1412
        [Peer]
        PublicKey=$WG_PUBLIC_KEY
        Endpoint=$WG_ENDPOINT
        AllowedIPs=192.168.169.0/24
        EOT
        mv wg.conf $WG_CONF_PATH
    - name: Configure SSH     
      run: |
        mkdir -p ~/.ssh/
        echo "$SSH_PRIVATE_KEY" > $SSH_PRIVATE_KEY_PATH      
        sudo chmod 600 $SSH_PRIVATE_KEY_PATH
      #echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts        
    - name: Check Configurations Exist
      run: |    
        ls $WG_CONF_PATH $SSH_PRIVATE_KEY_PATH && echo "true" >> $CONFIG_FILES_EXIST
        echo "Configs Exist: $CONFIG_FILES_EXIST"
    - name: Wireguard Connect
      if: ${{ CONFIG_FILES_EXIST }} == "true"
      run: |    
        sudo wg-quick up $WG_CONF_PATH && echo "true" >> $VPN_CONNECTED                
        echo "Wireguard Connected: $VPN_CONNECTED"
    - name: SSH and Deploy
      if: ${{ VPN_CONNECTED }} == "true"    
      run: |
        ssh -i $SSH_PRIVATE_KEY_FILE "pyusr@$SSH_HOST"
        echo whoami
    - name: Terminate Wireguard
      if: ${{ VPN_CONNECTED }} == "true" 
      run: |
        sudo wg-quick down $WG_CONF_PATH
